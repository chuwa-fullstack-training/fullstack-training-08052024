swagger: "2.0"
info:
  title: Company and Employee API
  description: API for managing companies and employees
  version: 1.0.0
host: localhost:3000
basePath: /api/v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /companies:
    post:
      tags:
        - Company
      summary: Create a new company
      description: Creates a new company in the database
      parameters:
        - in: body
          name: company
          description: Company object to create
          required: true
          schema:
            $ref: "#/definitions/Company"
      responses:
        201:
          description: Company created successfully
          schema:
            $ref: "#/definitions/Company"
        400:
          description: Invalid company data provided

    get:
      tags:
        - Company
      summary: Get all companies
      description: Returns a list of all companies
      responses:
        200:
          description: A list of companies
          schema:
            type: array
            items:
              $ref: "#/definitions/Company"

  /companies/{id}:
    get:
      tags:
        - Company
      summary: Get a company by id
      description: Returns a single company based on the provided id
      parameters:
        - name: id
          in: path
          description: ID of the company to return
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: The company description
          schema:
            $ref: "#/definitions/Company"
        404:
          description: Company not found

    put:
      tags:
        - Company
      summary: Update a company by id
      description: Updates a company in the database using its ID
      parameters:
        - name: id
          in: path
          description: ID of the company to update
          required: true
          type: integer
          format: int64
        - in: body
          name: company
          description: Company object to update
          required: true
          schema:
            $ref: "#/definitions/Company"
      responses:
        200:
          description: Company updated successfully
          schema:
            $ref: "#/definitions/Company"
        400:
          description: Invalid company data provided
        404:
          description: Company not found

    delete:
      tags:
        - Company
      summary: Delete a company by id
      description: Deletes a company from the database using its ID
      parameters:
        - name: id
          in: path
          description: ID of the company to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Company deleted successfully
        404:
          description: Company not found

  /companies/{id}/employees:
    get:
      tags:
        - Company
      summary: Get all employees of a company
      description: Returns a list of all employees of a specific company based on the company id
      parameters:
        - name: id
          in: path
          description: ID of the company to return employees for
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: A list of employees of the company
          schema:
            type: array
            items:
              $ref: "#/definitions/Employee"
        404:
          description: Company not found

  /employees:
    post:
      tags:
        - Employee
      summary: Create a new employee
      description: Creates a new employee in the database
      parameters:
        - in: body
          name: employee
          description: Employee object to create
          required: true
          schema:
            $ref: "#/definitions/Employee"
      responses:
        201:
          description: Employee created successfully
          schema:
            $ref: "#/definitions/Employee"
        400:
          description: Invalid employee data provided

    get:
      tags:
        - Employee
      summary: Get all employees
      description: Returns a list of all employees
      responses:
        200:
          description: A list of employees
          schema:
            type: array
            items:
              $ref: "#/definitions/Employee"

  /employees/{id}:
    get:
      tags:
        - Employee
      summary: Get an employee by id
      description: Returns a single employee based on the provided id
      parameters:
        - name: id
          in: path
          description: ID of the employee to return
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: The employee description
          schema:
            $ref: "#/definitions/Employee"
        404:
          description: Employee not found

    put:
      tags:
        - Employee
      summary: Update an employee by id
      description: Updates an employee in the database using its ID
      parameters:
        - name: id
          in: path
          description: ID of the employee to update
          required: true
          type: integer
          format: int64
        - in: body
          name: employee
          description: Employee object to update
          required: true
          schema:
            $ref: "#/definitions/Employee"
      responses:
        200:
          description: Employee updated successfully
          schema:
            $ref: "#/definitions/Employee"
        400:
          description: Invalid employee data provided
        404:
          description: Employee not found

    delete:
      tags:
        - Employee
      summary: Delete an employee by id
      description: Deletes an employee from the database using its ID
      parameters:
        - name: id
          in: path
          description: ID of the employee to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Employee deleted successfully
        404:
          description: Employee not found

definitions:
  Company:
    type: "object"
    required:
      - name
      - description
      - headquarters
      - industry
      - employees
    properties:
      name:
        type: "string"
      description:
        type: "string"
      headquarters:
        type: "string"
      industry:
        type: "string"
      employees:
        type: "array"
        items:
          $ref: "#/definitions/Employee"

  Employee:
    type: "object"
    required:
      - firstName
      - lastName
      - company
      - startDate
      - jobTitle
      - resigned
      - salary
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      company:
        $ref: "#/definitions/Company"
      startDate:
        type: "string"
        format: "date"
      jobTitle:
        type: "string"
      resigned:
        type: "boolean"
      salary:
        type: "number"
      manager:
        $ref: "#/definitions/Employee"